---
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const url = import.meta.env.SUPABASE_URL || "https://dxovplvdzgxfcdujfcov.supabase.co/rest/v1/bareen-glyp";
  const key = import.meta.env.SUPABASE_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR4b3ZwbHZkemd4ZmNkdWpmY292Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNTUxNTcsImV4cCI6MjA1OTkzMTE1N30.Qp7F7TSekQcPIw8qAb2a2sBR2XEIvPOlI2kscNH3YB4";

  const options = {
    headers: {
      apikey: key,
    },
  };

  try {
    const request = await fetch(url, options);

    if (!request.ok) {
      throw new Error(`Failed to fetch data: ${request.status}`);
    }

    const data = await request.json();

    return data.map((item) => {
      return {
        params: { slug: item.slug },
        props: { item },
      };
    });
  } catch (error) {
    console.error("Error fetching products:", error);
    return [];
  }
}

const { item } = Astro.props;
---

<Layout>
  <div class="procontainer">
    <div class="mobile-slideshow">
      <div class="slide-container">
        {
          item.img.map((image, index) => (
            <div class="slide" data-index={index}>
              <img src={image || "/placeholder.svg"} alt={`${item.name} - Image ${index + 1}`} loading={index < 2 ? "eager" : "lazy"} />
            </div>
          ))
        }
      </div>

      <!-- Slideshow controls -->
      <button class="slide-control prev" aria-label="Previous image">
        <span>&#10094;</span>
      </button>
      <button class="slide-control next" aria-label="Next image">
        <span>&#10095;</span>
      </button>

      <!-- Slide indicators -->
      <div class="slide-indicators">
        {item.img.map((_, index) => <span class="indicator" data-index={index} />)}
      </div>
    </div>

    <div class="product-content">
      <div class="product-images">
        {
          item.img.map((image, index) => (
            <div class="product-image">
              <img src={image || "/placeholder.svg"} alt={`${item.name} - Image ${index + 1}`} loading={index < 2 ? "eager" : "lazy"} />
            </div>
          ))
        }
      </div>

      <div class="productbox flexcol">
        <div class="flexrow chainlink">
          <a href="../">Forside</a>
          <p>&gt;</p>
          <a href={item.slug}>{item.name}</a>
        </div>

        <p class="collection">{item.collection}</p>
        <h2 class="product-name">{item.name}</h2>
        <h3 class="product-price">{item.price} kr</h3>
        <p class="product-description">{item.description}</p>

        <div class="flexcol size-section">
          <p>STØRRELSE <span class="size-message" id="size-message"></span></p>
          <div class="flexrow size-options">
            {
              item.sizeletter.XS && (
                <div class="box size-box" data-size="XS">
                  XS
                </div>
              )
            }
            {
              item.sizeletter.S && (
                <div class="box size-box" data-size="S">
                  S
                </div>
              )
            }
            {
              item.sizeletter.M && (
                <div class="box size-box" data-size="M">
                  M
                </div>
              )
            }
            {
              item.sizeletter.L && (
                <div class="box size-box" data-size="L">
                  L
                </div>
              )
            }
            {
              item.sizeletter.XL && (
                <div class="box size-box" data-size="XL">
                  XL
                </div>
              )
            }
          </div>
        </div>

        <div class="flexcol action-section">
          <div class="flexrow">
            <button class="kurvbox" id="add-to-cart">Læg i kurv</button>
          </div>
          <button class="nubox" id="buy-now">Køb nu</button>
          <div id="cart-message" class="cart-message"></div>
        </div>

        <div class="infoflexcol details-section">
          <div class="detail-header">
            <p>KOMPOSITION</p>
            <span class="toggle-icon">+</span>
          </div>
          <div class="detail-content">
            <ul>
              {item.komposition.map((comp) => <li>{comp}</li>)}
            </ul>
          </div>
        </div>

        <div class="infoflexcol details-section">
          <div class="detail-header">
            <p>VASK</p>
            <span class="toggle-icon">+</span>
          </div>
          <div class="detail-content">
            <p>{item.wash}</p>
          </div>
        </div>

        <div class="infoflexcol details-section">
          <div class="detail-header">
            <p>STØRRELSE</p>
            <span class="toggle-icon">+</span>
          </div>
          <div class="detail-content">
            <p>{item.size}</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Layout containers */
  .procontainer {
    width: 100%;
    max-width: 1300px;
    margin: auto;
    padding: 5rem 1rem;
    position: relative;
  }

  .product-content {
    display: flex;
    flex-direction: row;
    gap: 40px;
  }

  .flexrow {
    display: flex;
    flex-direction: row;
    gap: 15px;
    align-items: center;
  }

  .flexcol {
    gap: 15px;
    display: flex;
    flex-direction: column;
  }

  .infoflexcol {
    gap: 5px;
    display: flex;
    flex-direction: column;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    padding: 10px 0;
  }

  /* Product imgs */
  .product-images {
    display: flex;
    flex-direction: column;
    gap: 20px;
    width: 100%;
    max-width: 600px;
  }

  .product-image {
    width: 100%;
  }

  .product-image img {
    width: 100%;
    height: auto;
    max-height: 100%;
    object-fit: contain;
    display: block;
  }

  /* Mobile slideshow */
  .mobile-slideshow {
    width: 100%;
    position: relative;
    margin-bottom: 30px;
    display: none;
    overflow: hidden;
    height: auto;
    max-height: 80vh;
  }

  .slide-container {
    display: flex;
    transition: transform 0.4s ease;
    width: 100%;
  }

  .slide {
    min-width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .slide img {
    width: 100%;
    max-height: 70vh;
    object-fit: contain;
    display: block;
  }

  .slide-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.1);
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
    font-size: 18px;
  }

  .slide-control.prev {
    left: 10px;
  }

  .slide-control.next {
    right: 10px;
  }

  .slide-indicators {
    position: absolute;
    bottom: 15px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
    z-index: 10;
  }

  .indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.3);
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .indicator.active {
    background-color: rgba(0, 0, 0, 0.8);
  }

  /* Product details */
  .productbox {
    width: 400px;
    padding: 0 1rem;
    margin: 0 auto;
    position: sticky;
    top: 5%;
    height: fit-content;
  }

  .product-name {
    font-size: 1.8rem;
    font-weight: 500;
  }

  .product-price {
    font-size: 1.3rem;
    font-weight: 500;
  }

  .collection {
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 85%;
  }

  /* Size selection */
  .size-section {
    margin-top: 10px;
  }

  .size-message {
    font-size: 80%;
    color: #d32f2f;
    margin-left: 10px;
    display: none;
  }

  .size-options {
    flex-wrap: wrap;
  }

  .box {
    width: 60px;
    height: 50px;
    border: 2px solid rgba(0, 0, 0, 0.209);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    background-color: white;
    transition:
      background-color 0.2s ease-in,
      color 0.2s ease-in;
    cursor: pointer;
  }

  .box:hover {
    background-color: rgb(34, 34, 34);
    color: white;
  }

  .box.selected {
    background-color: rgb(34, 34, 34);
    color: white;
  }

  /* Action buttons */
  .kurvbox {
    width: 100%;
    height: 50px;
    color: white;
    border: 2px solid rgba(0, 0, 0, 0.209);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    background-color: rgb(14, 14, 14);
    transition:
      background-color 0.15s ease-in,
      color 0.15s ease-in;
    cursor: pointer;
  }

  .kurvbox:hover {
    background-color: rgb(255, 255, 255);
    color: rgb(14, 14, 14);
  }

  .nubox {
    width: 100%;
    height: 50px;
    border: 2px solid rgba(0, 0, 0, 0.209);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    background-color: white;
    transition:
      background-color 0.15s ease-in,
      color 0.15s ease-in;
    cursor: pointer;
  }

  .nubox:hover {
    background-color: rgb(34, 34, 34);
    color: white;
  }

  /* Cart message */
  .cart-message {
    text-align: center;
    font-size: 85%;
    color: #388e3c;
    min-height: 20px;
    display: none;
  }

  /* Product details sections */
  .detail-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    user-select: none;
  }

  .toggle-icon {
    font-size: 18px;
    font-weight: bold;
  }

  .detail-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
    padding-left: 5px;
  }

  .details-section.active .detail-content {
    max-height: 200px;
  }

  .details-section.active .toggle-icon {
    content: "-";
  }

  /* Responsive design */
  @media (max-width: 900px) {
    .procontainer {
      padding: 1rem;
    }

    .product-content {
      flex-direction: column;
    }

    .product-images {
      display: none;
    }

    .mobile-slideshow {
      display: block;
      margin-bottom: 20px;
    }

    .productbox {
      position: relative;
      width: 100%;
      top: 0;
      padding: 0;
    }

    .detail-content {
      max-height: 200px;
    }

    .product-name {
      font-size: 1.5rem;
    }

    .product-price {
      font-size: 1.2rem;
    }
  }
</style>

<script>
  // Kodet ved brug af v0
  // Initialize selected size
  let selectedSize = "";

  // Get DOM elements
  const sizeBoxes = document.querySelectorAll(".size-box");
  const sizeMessage = document.getElementById("size-message");
  const addToCartBtn = document.getElementById("add-to-cart");
  const buyNowBtn = document.getElementById("buy-now");
  const cartMessage = document.getElementById("cart-message");
  const detailSections = document.querySelectorAll(".details-section");

  // Mobile slideshow functionality
  let currentSlide = 0;
  const slides = document.querySelectorAll(".slide");
  const indicators = document.querySelectorAll(".indicator");
  const prevBtn = document.querySelector(".slide-control.prev");
  const nextBtn = document.querySelector(".slide-control.next");
  const slideContainer = document.querySelector(".slide-container");

  // Initialize slideshow
  function showSlide(index) {
    if (!slideContainer || slides.length === 0) return;

    // Handle bounds
    if (index < 0) index = slides.length - 1;
    if (index >= slides.length) index = 0;

    currentSlide = index;

    // Move slide container
    slideContainer.style.transform = `translateX(-${currentSlide * 100}%)`;

    // Update indicators
    indicators.forEach((indicator, i) => {
      if (i === currentSlide) {
        indicator.classList.add("active");
      } else {
        indicator.classList.remove("active");
      }
    });
  }

  // Set first slide and indicator as active initially
  if (indicators.length > 0) {
    indicators[0].classList.add("active");
  }

  // Add event listeners for slideshow navigation
  if (prevBtn) {
    prevBtn.addEventListener("click", (e) => {
      e.preventDefault();
      showSlide(currentSlide - 1);
    });
  }

  if (nextBtn) {
    nextBtn.addEventListener("click", (e) => {
      e.preventDefault();
      showSlide(currentSlide + 1);
    });
  }

  // Add click events to indicators
  indicators.forEach((indicator, index) => {
    indicator.addEventListener("click", (e) => {
      e.preventDefault();
      showSlide(index);
    });
  });

  // Add swipe functionality
  let touchStartX = 0;
  let touchEndX = 0;

  const mobileSlideshow = document.querySelector(".mobile-slideshow");
  if (mobileSlideshow) {
    mobileSlideshow.addEventListener(
      "touchstart",
      (e) => {
        touchStartX = e.changedTouches[0].screenX;
      },
      { passive: true }
    );

    mobileSlideshow.addEventListener(
      "touchend",
      (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
      },
      { passive: true }
    );
  }

  function handleSwipe() {
    const threshold = 50; // Minimum distance to consider as swipe

    if (touchEndX < touchStartX - threshold) {
      // Swipe left - next slide
      showSlide(currentSlide + 1);
    } else if (touchEndX > touchStartX + threshold) {
      // Swipe right - previous slide
      showSlide(currentSlide - 1);
    }
  }

  // Initialize slideshow on page load
  document.addEventListener("DOMContentLoaded", () => {
    showSlide(0);
  });

  // Size selection functionality
  sizeBoxes.forEach((box) => {
    box.addEventListener("click", () => {
      // Clear previous selection
      sizeBoxes.forEach((b) => b.classList.remove("selected"));

      // Set new selection
      box.classList.add("selected");
      selectedSize = box.getAttribute("data-size");

      // Clear size warning if present
      if (sizeMessage) {
        sizeMessage.style.display = "none";
      }
    });
  });

  // Add to cart functionality
  if (addToCartBtn) {
    addToCartBtn.addEventListener("click", () => {
      if (!selectedSize) {
        // Show size warning
        if (sizeMessage) {
          sizeMessage.textContent = "Vælg venligst en størrelse";
          sizeMessage.style.display = "inline";
        }
        return;
      }

      // Show success message
      if (cartMessage) {
        cartMessage.textContent = `Produkt i størrelse ${selectedSize} tilføjet til kurven`;
        cartMessage.style.display = "block";

        // Hide message after 3 seconds
        setTimeout(() => {
          cartMessage.style.display = "none";
        }, 3000);
      }

      // Here you would add cart functionality
      console.log(`Added to cart: Size ${selectedSize}`);
    });
  }

  // Buy now functionality
  if (buyNowBtn) {
    buyNowBtn.addEventListener("click", () => {
      if (!selectedSize) {
        // Show size warning
        if (sizeMessage) {
          sizeMessage.textContent = "Vælg venligst en størrelse";
          sizeMessage.style.display = "inline";
        }
        return;
      }

      // Here you would implement checkout functionality
      console.log(`Proceeding to checkout: Size ${selectedSize}`);
      // Redirect to checkout or open modal
    });
  }

  // Collapsible details sections
  detailSections.forEach((section) => {
    const header = section.querySelector(".detail-header");

    if (header) {
      header.addEventListener("click", () => {
        section.classList.toggle("active");

        const icon = section.querySelector(".toggle-icon");
        if (icon) {
          icon.textContent = section.classList.contains("active") ? "-" : "+";
        }
      });
    }
  });
</script>
